##Tags: OOPS, C#

What are Constructors: 
  Constructors are used to initialize the member of a class. They are invoked immediatly as soon as instance of the class is created. 
      1- A class can have more that one Constructors (Constructor Oberloading).
      2- A Construtor must have the same name as the class.
      
      class MyFirstClass{
        int x;
        // 0 argument constructor
        MyFirstClass(){
          x =10;
        }
        
        //1 argument consructor
        MyFirstClass(int z){
          x = 10*z;
        }
        
      }
      
      class MyOtherClass{
        static voic Main(string[] args){
          MyFirstClass obj = new MyFirstClass();   // This will call 0 arg constructor and x will be initialized with 10.
          MyFirstClass obj1 = new MyFirstClass(2); // This will call 1 arg constructor and x will be initialized with 20.
        }
      }

Types Of Constructors:
  1- Instance Constructors: 
            Constructors are of this type by default. This type of constructor triggers every time an instance of the class is 
            created and are used to initialize non-static members of the class.  
            
  2- Static Constructors: 
            Static constructors are used to initializing the static members of the class and implicitly called with the execution 
            of the class. you do not need to initialze a class to call them.
            R: Static Constructors can only be called once in the life cycle of a class execution.
            
Enough talk.... Now time to see it working:
 
Constructor Lab1:

using System;

namespace Constructor
{
    class ConstrLab1
    {
        //Instance Constructor
        ConstrLab1()
        {
            Console.WriteLine("Calling Instance Constructor.");
        }

        //Static Constructor
        static ConstrLab1()
        {
            Console.WriteLine("Calling Static Constructor.");
        }

        static void Main(string[] args)
        {
            ConstrLab1 obj1 = new ConstrLab1();
            ConstrLab1 obj2 = new ConstrLab1();
            Console.ReadKey();
        }
    }
}


Output: 
Calling Static Constructor.
Calling Instance Constructor.
Calling Instance Constructor.

Explanation of the Output:

Since we created 2 instance of the Class, hence 2 times instance constuctor was called, and as we learned static constructor 
executed only once per execution hence it is printed only once. Static Construtor executes first before any other code is 
executed, so it prints first. 

